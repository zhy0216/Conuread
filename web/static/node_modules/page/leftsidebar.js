var $ = require("jquery");
var swig = require("swig");
var FeedSite = require("model/feedsite").FeedSite;
var FeedSiteList = require("model/feedsite").FeedSiteList;

var SubChooser = function(item){
    var self = this;

    this.targetDom = $("#subsribe-chooser");
    this.originalTargetDom = this.targetDom.clone();

    this.currentActiveItem = item || null;
    this.feedSiteList = new FeedSiteList();

    this.feedSiteListTemplate = swig.compile($("#feedSiteListTemplate").html());


    this.init = function(){
        if(this.currentActiveItem == null){
            this.currentActiveItem = $(".sub-btn").first();
            this.currentActiveItem.addClass("active");

        }
        this.eventBind();
        this._setFeedSiteListData(feedSiteListData);
        this.render();
    }

    this.feedReadAction = function(feed){
        var feedsite = self.feedSiteList.getFeedSiteById(feed.feedsiteid);
        feedsite.unreadCount--;
        self.clearTarget();
        self.render();
        console.log("feed action");
        console.log(feed);
    }

    this.clearTarget = function(){
        this.targetDom.html(this.originalTargetDom.html());
    }


    this.eventBind = function (){
        $(".sub-btn").on("click", function(){
            var $this = $(this);
            self.currentActiveItem.removeClass("active");
            $this.addClass("active");
            self.currentActiveItem = $this;
        })
    }

    this._setFeedSiteListData = function(feedSiteListData){
         $.each(feedSiteListData, function(i, jsonData){
            var feedSite = new FeedSite();
            feedSite.init(jsonData)
            self.feedSiteList.addFeedSite(jsonData);
        });
    }

    this.render = function(){
        var content = this.feedSiteList.render(this.feedSiteListTemplate);
        this.targetDom.append(content);
        return this;
    }



} 

exports.SubChooser = SubChooser;
