var $ = require("jquery");
var swig = require("swig");
var signal = require('signal').createSignal();
var Feed = require("model/feed").Feed;
var FeedList = require("model/feed").FeedList;


var ContentShower = function(){
    var self= this;
    this.targetDom = $("#content");
    this.feedList = new FeedList();
    this.feedListTemplate = swig.compile($("#feedListTemplate").html());
    this.currentActiveFeed = null;


    this.init = function(){
        console.log("start contentshower");
        this.bindEvent();
        this._setFeedListData(feedListData);
        this.render();
    }

    this.setFeedListData = function(feedListData){
        self.feedList = new FeedList();
        this._setFeedListData(feedListData);
    }

    this._setFeedListData = function(feedListData){
        $.each(feedListData, function(i, jsonData){
            var feed = new Feed();
            feed.init(jsonData)
            self.feedList.addFeed(jsonData);
        });
    }   

    this.cleanTarget = function(){
        this.targetDom.html("");
        return this;
    }

    this.scrollTop = function(value, animation){
        value = value || 0;
        animation = animation || false;
        // this.targetDom.scrollTop(value);
        if(animation){
            this.targetDom.animate({"scrollTop": value},'fast');
        }else{
            this.targetDom.scrollTop(value);
        }
        return this;
    }


    this.render = function(){
        var content = this.feedList.render(this.feedListTemplate);
        this.targetDom.append(content);
        return this;
    }

    this.readFeed = function(dom){
        var feedid = dom.attr("feedid");
        $.post("/api/feed/" + feedid + "/read", function(data){
            console.log(data);
        })
        signal.publish('feed-read')(self.feedList.getFeedById(feedid));
    }

    this.activeFeed = function(dom){
        if(self.currentActiveFeed != null){
            self.currentActiveFeed.removeClass("active-panel")
                                  .addClass("has-read-panel text-muted");
        }

        if( !dom.hasClass("has-read-panel") ){
            this.readFeed(dom);
        }

        dom.removeClass("unactive-panel").addClass("active-panel");
        self.currentActiveFeed = dom;
    }

    this.bindEvent = function(){
        $(document).on("click", 
                       ".article-controller .star .glyphicon-star-empty", 
                       function(e){
            e.stopPropagation();
            e.preventDefault();
            console.log("click empty start");

            var $this = $(this);
            self.toggleStar($this);

            var articleid = $this.closest("[articleid]").attr("articleid");

        });

        $(document).on("click", 
                       ".article-controller .star .glyphicon-star", 
                       function(e){
            e.stopPropagation();
            e.preventDefault();
            console.log("click star");

            var $this = $(this);
            self.toggleStar($this);

            var articleid = $this.closest("[articleid]").attr("articleid");
            console.log("articleid" + articleid);
        });

        $("#content").scroll(function(){
            var $this = $(this);
            var top = $this.offset().top;
            var bottom = top + $this.height();
            var activeLine = 1*bottom/5; 
            var done = false;

            // if(self.currentActiveFeed == null){
            //     self.activeFeed($("#content .unactive-panel").first())
            // }

            $("[feedid]", this).each(function(i, dom){
                if(done){
                    return;
                }
                var $dom = $(dom);
                if(($dom.position().top == top) ||
                     ($dom.position().top  < activeLine &&
                     $dom.position().top >= top)){
                    self.activeFeed($dom);
                    done = true;
                    return;
                }

            });

        })

        $(document).on("click","[feedid]", function(e){
            // e.stopPropagation();
            // e.preventDefault();
            console.log("click feed");
            var $this = $(this);
            var top = $this.position().top;
            var scrollTop = self.targetDom.scrollTop();
            self.targetDom.scrollTop(scrollTop + top);
            self.activeFeed($this);
        })


        this._keyboardBind()

        // $(document).on("mouseenter mouseleave", ".article-controller .star .glyphicon", function(){
        //     console.log("hover");
        //     self.toggleStar($(this));
        // })
    }


    this._keyboardBind = function(){
        $(document).on("keypress", function(e){
            if(e.which==32 && $(":focus").length == 0){ // 32 => space
                e.preventDefault();
                var top = self.targetDom.scrollTop();
                self.scrollTop(top+200, true);
                if(self.currentActiveFeed == null){
                    self.activeFeed($("#content [feedid]").first());
                }
            }
        })
    }


    this.toggleStar = function(dom){
        if(dom.hasClass("glyphicon-star")){
            dom.removeClass("glyphicon-star")
               .addClass("glyphicon-star-empty");
        }else{
            dom.removeClass("glyphicon-star-empty")
               .addClass("glyphicon-star");
        }
    }


}

exports.ContentShower = ContentShower;
