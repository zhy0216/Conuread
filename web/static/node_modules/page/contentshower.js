var $ = require("jquery");
var swig = require("swig");
var signal = require('signal').createSignal();
var Feed = require("model/feed").Feed;
var FeedList = require("model/feed").FeedList;


var ContentShower = function(){
    var self= this;
    this.targetDom = $("#content");
    this.feedList = new FeedList();
    this.feedListTemplate = swig.compile($("#feedListTemplate").html());


    this.init = function(){
        console.log("start contentshower");
        this.bindEvent();
        $.each(feedListData, function(i, jsonData){
            var feed = new Feed();
            feed.init(jsonData)
            self.feedList.addFeed(jsonData);
        })
        this.render();
    }


    this.render = function(){
        var content = this.feedList.render(this.feedListTemplate);
        this.targetDom.append(content);
    }

    this.bindEvent = function(){
        $(document).on("click", 
                       ".article-controller .star .glyphicon-star-empty", 
                       function(){
            var $this = $(this);
            self.toggleStar($this);

            var articleid = $this.closest("[articleid]").attr("articleid");
            signal.publish('test')();

        });

        $(document).on("click", 
                       ".article-controller .star .glyphicon-star", 
                       function(){
            var $this = $(this);
            self.toggleStar($this);

            var articleid = $this.closest("[articleid]").attr("articleid");
            console.log("articleid" + articleid);
        });

        $("#content").scroll(function(){
            var $this = $(this);
            var top = $this.offset().top;
            var bottom = top + $this.height();
            var activeLine = 1*bottom/2; 
            var done = false;

            $("[feedid]", this).each(function(i, dom){
                if(done){
                    return;
                }
                var $dom = $(dom);
                if($dom.position().top  < activeLine && $dom.position().top >= top){
                    $dom.removeClass("unactive-panel").addClass("active-panel")
                    done = true;
                    return;
                }
                // console.log("$dom.offset().top:"+$dom.offset().top);
                // console.log("$dom.position().top:"+$dom.position().top);
                // console.log("$dom.height():"+$dom.height());
                // console.log("$dom.next().offset().top:"+$dom.next().offset().top);
                // console.log("$dom.next().position().top:"+$dom.next().position().top);
                // console.log("activeLine:"+activeLine);

            });

        })




        // $(document).on("mouseenter mouseleave", ".article-controller .star .glyphicon", function(){
        //     console.log("hover");
        //     self.toggleStar($(this));
        // })
    }


    this.toggleStar = function(dom){
        if(dom.hasClass("glyphicon-star")){
            dom.removeClass("glyphicon-star")
               .addClass("glyphicon-star-empty");
        }else{
            dom.removeClass("glyphicon-star-empty")
               .addClass("glyphicon-star");
        }
    }


}

exports.ContentShower = ContentShower;
